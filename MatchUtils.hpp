#include "Match.hpp"
#include "Read.hpp"
#include <unordered_map>
#include <map>
#include <unordered_set>

class MatchUtils 
{
	public:
	static int read_paf_file(std::unordered_map<std::string, std::unordered_map<std::string, Match> >& all_matches, std::unordered_map<std::string, std::vector<std::string>>& matches_indexed, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& raw_matces, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, int>& read_lengths, std::string file_name, std::unordered_set<std::string>& chimeric_reads, std::unordered_map<std::string, Read>& read_classification, bool gfa, bool use_names_as_is);
	static int read_and_assemble_paf_dir(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string, std::vector<std::string>>& matches_indexed, std::vector<std::string>& n50_values, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, int>& read_lengths, std::string file_name, std::unordered_set<std::string>& chimeric_reads, std::unordered_map<std::string, Read>& read_classification, int fuzz, int iterations, int threshold, bool use_names_as_is);
	static int read_and_assemble_paf_dir_binned(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::vector<std::string>& n50_values, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, int>& read_lengths, std::string file_name, std::unordered_set<std::string>& chimeric_reads, std::unordered_map<std::string, Read>& read_classification, int fuzz, int iterations, int threshold, bool use_names_as_is);
	static bool check_bubble(std::string start, std::string end, std::unordered_set<std::string> reads, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree);
	static void reduce_edges(std::unordered_map<std::string, std::unordered_map<std::string, Match> >& all_matches, std::unordered_map<std::string, std::vector<std::string>>& matches_indexed, std::unordered_set<std::string>& read_ids, int fuzz);
	static void toGfa(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string, int>& read_lengths, std::string file_name, std::unordered_map<std::string, std::vector<std::string> >& read_indegree, std::unordered_map<std::string, std::vector<std::string> >& read_outdegree, std::unordered_map<std::string, std::string>& read_names, std::unordered_map<std::string, std::string>& colours, std::unordered_map<std::string, float>& read_coverage);
	static void compute_dead_ends(std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, std::vector<std::string> >& read_indegree, std::unordered_map<std::string, std::vector<std::string> >& read_outdegree, std::unordered_set<std::string>& de_ids, std::unordered_map<std::string, std::vector<std::string> >& de_paths);
	static void compute_in_out_degree(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, std::vector<std::string> >& read_indegree, std::unordered_map<std::string, std::vector<std::string> >& read_outdegree);
	static int prune_dead_paths(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, std::vector<std::string> >& read_indegree, std::unordered_map<std::string, std::vector<std::string> >& read_outdegree, std::unordered_map<std::string, std::vector<std::string> >& de_paths, int mean_read_length, int threshold);
	static void compute_sets(std::unordered_map<std::string, std::vector<Match> >& all_matches, std::string start, std::string current, std::string end, std::map<std::pair<std::string,std::string>, std::unordered_set<std::string> >& bubble_unordered_sets, std::unordered_set<std::string> seen);
	static void find_bubble(std::string start, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::map<std::pair<std::string,std::string>, std::unordered_set<std::string> >& bubble_unordered_sets, std::vector<std::string>& start_ids);
	static void filter_dead_end_branches(std::unordered_map<std::string, std::vector<Match> >& all_matches, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, int>& read_indegree, std::unordered_map<std::string, int>& read_outdegree, std::unordered_map<std::string, std::vector<std::string> >& de_paths);
	static void prune_branch_dead_ends(std::unordered_map<std::string, std::vector<Match> >& all_matches, std::unordered_map<std::string, int>& read_indegree, std::unordered_map<std::string, int>& read_outdegree,std::unordered_set<std::string>& read_ids);
	static void clean_matches(std::unordered_map<std::string, std::unordered_map<std::string, Match> >& all_matches);
	static int compute_contigs(std::string id, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::unordered_map<int, std::vector<Match> >& contig_unordered_map, int contig_number);
	static void subset_matches(std::unordered_map<std::string, std::vector<Match> >& all_matches, std::unordered_map<std::string, std::vector<Match> >& edge_lists, std::unordered_map<std::string, std::vector<Match> >& species_matches, std::unordered_map<std::string, std::vector<Match> >&  species_edge_lists, std::unordered_set<std::string> ids_to_use);
	static void get_bubble_arms(std::string start, std::string end, std::unordered_set<std::string> reads, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::vector<std::vector<std::string> >& arms);
	static std::string compute_n50(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::unordered_set<std::string>& read_ids, int threshold);
	static std::string compute_ng50(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::unordered_set<std::string>& read_ids, int genome_size, int threshold);
	static std::vector<float> validBubbleTaxCov(std::vector<std::vector<std::string> >& arms, std::unordered_map<std::string, float>& read_coverage, std::unordered_map<std::string, float>& per_species_coverage, std::unordered_map<std::string, std::string>& read_levels, std::unordered_map<std::string, int>& read_lengths, bool binned, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches);
	static bool validBubbleTax(std::vector<std::vector<std::string> >& arms, std::unordered_map<std::string, std::string>& read_lowest_taxonomy);
	static float validBubbleCov(std::vector<std::vector<std::string> >& arms, std::unordered_map<std::string, float>& read_coverage, std::unordered_map<std::string, int>& read_lengths);
	static void collapseBubble(std::vector<std::vector<std::string> >& arms, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches);
	static float getArmLengthRatio(std::vector<std::vector<std::string> >& arms, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches);
	static void remove_edge(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::string start, std::string end);
	static void remove_internal_bubbles(std::map<std::pair<std::string,std::string>, std::unordered_set<std::string> >& bubble_unordered_sets, std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree);
	static void collapse_contigs(std::unordered_map<std::string, std::unordered_map<std::string,Match> >& all_matches, std::unordered_map<std::string,std::vector<std::string> >& read_indegree, std::unordered_map<std::string,std::vector<std::string> >& read_outdegree, std::unordered_set<std::string>& read_ids, std::unordered_map<std::string, std::string>& colours, std::unordered_map<std::string, float>& read_coverage, std::string outputFileName, int threshold);
	static std::string get_hex_string(std::string& str, bool use_names_as_is);
	static std::string get_read_string(std::string& str, bool use_names_as_is);
};
